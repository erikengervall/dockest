// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generateComposeFile should handle runners with build prop 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "services": Object {
          "build1": Object {
            "build": "./some/path",
            "ports": Array [
              "build1:build1",
            ],
          },
          "build2": Object {
            "build": "./some/path",
            "ports": Array [
              "build1:build2",
            ],
          },
        },
        "version": "3",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": "version: '3'
services:
  build1:
    build: ./some/path
    ports:
      - 'build1:build1'
  build2:
    build: ./some/path
    ports:
      - 'build1:build2'
",
    },
  ],
}
`;

exports[`generateComposeFile should handle runners with networks prop 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "networks": Object {
          "bueno": null,
        },
        "services": Object {
          "networks1": Object {
            "image": "some/thing:101",
            "networks": Object {
              "bueno": null,
            },
            "ports": Array [
              "networks1:networks1",
            ],
          },
          "networks2": Object {
            "image": "some/thing:101",
            "networks": Object {
              "bueno": null,
            },
            "ports": Array [
              "networks2:networks2",
            ],
          },
        },
        "version": "3",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": "version: '3'
services:
  networks1:
    image: 'some/thing:101'
    networks:
      bueno: null
    ports:
      - 'networks1:networks1'
  networks2:
    image: 'some/thing:101'
    networks:
      bueno: null
    ports:
      - 'networks2:networks2'
networks:
  bueno: null
",
    },
  ],
}
`;

exports[`generateComposeFile should handle the standard initializedRunners 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "services": Object {
          "general": Object {
            "image": "some/image:123",
            "ports": Array [],
          },
          "kafka": Object {
            "depends_on": Array [
              "zookeepeer",
            ],
            "environment": Object {
              "KAFKA_ADVERTISED_LISTENERS": "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092",
              "KAFKA_AUTO_CREATE_TOPICS_ENABLE": "true",
              "KAFKA_BROKER_ID": 1,
              "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP": "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT",
              "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR": 1,
              "KAFKA_ZOOKEEPER_CONNECT": "zookeepeer:2181",
            },
            "image": "some/image:123",
            "ports": Array [
              "9092:9092",
            ],
          },
          "postgres": Object {
            "environment": Object {
              "POSTGRES_DB": "_",
              "POSTGRES_PASSWORD": "_",
              "POSTGRES_USER": "_",
            },
            "image": "some/image:123",
            "ports": Array [
              "5432:5432",
            ],
          },
          "redis": Object {
            "image": "some/image:123",
            "ports": Array [
              "6379:6379",
            ],
          },
          "zookeepeer": Object {
            "environment": Object {
              "ZOOKEEPER_CLIENT_PORT": "2181",
            },
            "image": "some/image:123",
            "ports": Array [
              "2181:2181",
            ],
          },
        },
        "version": "3",
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": "version: '3'
services:
  kafka:
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeepeer:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeepeer
    image: 'some/image:123'
    ports:
      - '9092:9092'
  zookeepeer:
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
    image: 'some/image:123'
    ports:
      - '2181:2181'
  postgres:
    environment:
      POSTGRES_DB: _
      POSTGRES_PASSWORD: _
      POSTGRES_USER: _
    image: 'some/image:123'
    ports:
      - '5432:5432'
  redis:
    image: 'some/image:123'
    ports:
      - '6379:6379'
  general:
    image: 'some/image:123'
    ports: []
",
    },
  ],
}
`;
