// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runRunnerCommands test all runner types should work for GeneralPurposeRunner 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Executed custom command: runRunnerCommands ðŸŒ®",
    ],
    Array [
      "Executed custom command successfully with result: getContainerId ðŸŒ®",
      Object {
        "nl": 1,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for GeneralPurposeRunner 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for KafkaRunner 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Executed custom command: runRunnerCommands ðŸŒ®",
    ],
    Array [
      "Executed custom command successfully with result: getContainerId ðŸŒ®",
      Object {
        "nl": 1,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for KafkaRunner 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for PostgresRunner 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Executed custom command: runRunnerCommands ðŸŒ®",
    ],
    Array [
      "Executed custom command successfully with result: getContainerId ðŸŒ®",
      Object {
        "nl": 1,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for PostgresRunner 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for RedisRunner 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Executed custom command: runRunnerCommands ðŸŒ®",
    ],
    Array [
      "Executed custom command successfully with result: getContainerId ðŸŒ®",
      Object {
        "nl": 1,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for RedisRunner 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for ZooKeeperRunner 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "Executed custom command: runRunnerCommands ðŸŒ®",
    ],
    Array [
      "Executed custom command successfully with result: getContainerId ðŸŒ®",
      Object {
        "nl": 1,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`runRunnerCommands test all runner types should work for ZooKeeperRunner 2`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
    Array [
      "runRunnerCommands ðŸŒ®",
      Object {
        "shell": true,
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
    Object {
      "type": "return",
      "value": Object {
        "stdout": "getContainerId ðŸŒ®",
      },
    },
  ],
}
`;
